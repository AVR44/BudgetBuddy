{"ast":null,"code":"var _jsxFileName = \"/Users/aaryarane29/Desktop/test/expense/frontend/src/components/Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement);\nconst Reports = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [timeRange, setTimeRange] = useState('month');\n  useEffect(() => {\n    // Mock expenses data\n    const mockExpenses = [{\n      _id: '1',\n      amount: 150,\n      category: 'Food',\n      description: 'Grocery shopping',\n      date: new Date('2023-08-15')\n    }, {\n      _id: '2',\n      amount: 50,\n      category: 'Transportation',\n      description: 'Gas',\n      date: new Date('2023-08-14')\n    }, {\n      _id: '3',\n      amount: 200,\n      category: 'Education',\n      description: 'Books',\n      date: new Date('2023-08-10')\n    }, {\n      _id: '4',\n      amount: 100,\n      category: 'Entertainment',\n      description: 'Movie night',\n      date: new Date('2023-08-08')\n    }, {\n      _id: '5',\n      amount: 75,\n      category: 'Shopping',\n      description: 'Clothes',\n      date: new Date('2023-08-05')\n    }, {\n      _id: '6',\n      amount: 120,\n      category: 'Food',\n      description: 'Dining out',\n      date: new Date('2023-08-03')\n    }, {\n      _id: '7',\n      amount: 60,\n      category: 'Bills',\n      description: 'Internet bill',\n      date: new Date('2023-08-01')\n    }];\n    setExpenses(mockExpenses);\n  }, []);\n  const getFilteredExpenses = () => {\n    const now = new Date();\n    const filtered = expenses.filter(expense => {\n      const expenseDate = new Date(expense.date);\n      if (timeRange === 'month') {\n        return expenseDate.getMonth() === now.getMonth() && expenseDate.getFullYear() === now.getFullYear();\n      } else if (timeRange === 'year') {\n        return expenseDate.getFullYear() === now.getFullYear();\n      }\n      return true;\n    });\n    return filtered;\n  };\n  const getCategoryData = () => {\n    const filteredExpenses = getFilteredExpenses();\n    const categories = {};\n    filteredExpenses.forEach(expense => {\n      categories[expense.category] = (categories[expense.category] || 0) + expense.amount;\n    });\n    return {\n      labels: Object.keys(categories),\n      datasets: [{\n        label: 'Expenses by Category',\n        data: Object.values(categories),\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#FF6384']\n      }]\n    };\n  };\n  const getMonthlyData = () => {\n    const filteredExpenses = getFilteredExpenses();\n    const months = Array(12).fill(0);\n    filteredExpenses.forEach(expense => {\n      const month = new Date(expense.date).getMonth();\n      months[month] += expense.amount;\n    });\n    return {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      datasets: [{\n        label: 'Monthly Expenses',\n        data: months,\n        backgroundColor: '#36A2EB'\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reports\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expense Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-range\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: timeRange,\n        onChange: e => setTimeRange(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"month\",\n          children: \"This Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"year\",\n          children: \"This Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Expenses by Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          data: getCategoryData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Monthly Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: getMonthlyData(),\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"dzxmj6tYbjEd7PxQqoe0usa877c=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","Bar","Pie","jsxDEV","_jsxDEV","register","Reports","_s","expenses","setExpenses","timeRange","setTimeRange","mockExpenses","_id","amount","category","description","date","Date","getFilteredExpenses","now","filtered","filter","expense","expenseDate","getMonth","getFullYear","getCategoryData","filteredExpenses","categories","forEach","labels","Object","keys","datasets","label","data","values","backgroundColor","getMonthlyData","months","Array","fill","month","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","options","responsive","plugins","legend","position","_c","$RefreshReg$"],"sources":["/Users/aaryarane29/Desktop/test/expense/frontend/src/components/Reports.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from 'chart.js';\nimport { Bar, Pie } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n\nconst Reports = () => {\n  const [expenses, setExpenses] = useState([]);\n  const [timeRange, setTimeRange] = useState('month');\n\n  useEffect(() => {\n    // Mock expenses data\n    const mockExpenses = [\n      {\n        _id: '1',\n        amount: 150,\n        category: 'Food',\n        description: 'Grocery shopping',\n        date: new Date('2023-08-15')\n      },\n      {\n        _id: '2',\n        amount: 50,\n        category: 'Transportation',\n        description: 'Gas',\n        date: new Date('2023-08-14')\n      },\n      {\n        _id: '3',\n        amount: 200,\n        category: 'Education',\n        description: 'Books',\n        date: new Date('2023-08-10')\n      },\n      {\n        _id: '4',\n        amount: 100,\n        category: 'Entertainment',\n        description: 'Movie night',\n        date: new Date('2023-08-08')\n      },\n      {\n        _id: '5',\n        amount: 75,\n        category: 'Shopping',\n        description: 'Clothes',\n        date: new Date('2023-08-05')\n      },\n      {\n        _id: '6',\n        amount: 120,\n        category: 'Food',\n        description: 'Dining out',\n        date: new Date('2023-08-03')\n      },\n      {\n        _id: '7',\n        amount: 60,\n        category: 'Bills',\n        description: 'Internet bill',\n        date: new Date('2023-08-01')\n      }\n    ];\n\n    setExpenses(mockExpenses);\n  }, []);\n\n  const getFilteredExpenses = () => {\n    const now = new Date();\n    const filtered = expenses.filter((expense) => {\n      const expenseDate = new Date(expense.date);\n      if (timeRange === 'month') {\n        return (\n          expenseDate.getMonth() === now.getMonth() &&\n          expenseDate.getFullYear() === now.getFullYear()\n        );\n      } else if (timeRange === 'year') {\n        return expenseDate.getFullYear() === now.getFullYear();\n      }\n      return true;\n    });\n    return filtered;\n  };\n\n  const getCategoryData = () => {\n    const filteredExpenses = getFilteredExpenses();\n    const categories = {};\n    filteredExpenses.forEach((expense) => {\n      categories[expense.category] = (categories[expense.category] || 0) + expense.amount;\n    });\n\n    return {\n      labels: Object.keys(categories),\n      datasets: [\n        {\n          label: 'Expenses by Category',\n          data: Object.values(categories),\n          backgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            '#FFCE56',\n            '#4BC0C0',\n            '#9966FF',\n            '#FF9F40',\n            '#FF6384',\n          ],\n        },\n      ],\n    };\n  };\n\n  const getMonthlyData = () => {\n    const filteredExpenses = getFilteredExpenses();\n    const months = Array(12).fill(0);\n    filteredExpenses.forEach((expense) => {\n      const month = new Date(expense.date).getMonth();\n      months[month] += expense.amount;\n    });\n\n    return {\n      labels: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n      ],\n      datasets: [\n        {\n          label: 'Monthly Expenses',\n          data: months,\n          backgroundColor: '#36A2EB',\n        },\n      ],\n    };\n  };\n\n  return (\n    <div className=\"reports\">\n      <h2>Expense Reports</h2>\n      <div className=\"time-range\">\n        <select value={timeRange} onChange={(e) => setTimeRange(e.target.value)}>\n          <option value=\"month\">This Month</option>\n          <option value=\"year\">This Year</option>\n          <option value=\"all\">All Time</option>\n        </select>\n      </div>\n\n      <div className=\"charts\">\n        <div className=\"chart-container\">\n          <h3>Expenses by Category</h3>\n          <Pie data={getCategoryData()} />\n        </div>\n        <div className=\"chart-container\">\n          <h3>Monthly Expenses</h3>\n          <Bar\n            data={getMonthlyData()}\n            options={{\n              responsive: true,\n              plugins: {\n                legend: {\n                  position: 'top',\n                },\n              },\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Reports; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}