{"ast":null,"code":"var _jsxFileName = \"/Users/aaryarane29/Desktop/test/expense/frontend/src/components/Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement);\nconst Reports = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [timeRange, setTimeRange] = useState('month');\n  const [chartType, setChartType] = useState('pie');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Simulate loading data\n    setIsLoading(true);\n\n    // Mock expenses data - simulate a delay for loading effect\n    setTimeout(() => {\n      const mockExpenses = [{\n        _id: '1',\n        amount: 150,\n        category: 'Food',\n        description: 'Grocery shopping',\n        date: new Date('2023-08-15')\n      }, {\n        _id: '2',\n        amount: 50,\n        category: 'Transportation',\n        description: 'Gas',\n        date: new Date('2023-08-14')\n      }, {\n        _id: '3',\n        amount: 200,\n        category: 'Education',\n        description: 'Books',\n        date: new Date('2023-08-10')\n      }, {\n        _id: '4',\n        amount: 100,\n        category: 'Entertainment',\n        description: 'Movie night',\n        date: new Date('2023-08-08')\n      }, {\n        _id: '5',\n        amount: 75,\n        category: 'Shopping',\n        description: 'Clothes',\n        date: new Date('2023-08-05')\n      }, {\n        _id: '6',\n        amount: 120,\n        category: 'Food',\n        description: 'Dining out',\n        date: new Date('2023-08-03')\n      }, {\n        _id: '7',\n        amount: 60,\n        category: 'Bills',\n        description: 'Internet bill',\n        date: new Date('2023-08-01')\n      }];\n      setExpenses(mockExpenses);\n      setIsLoading(false);\n    }, 800);\n  }, []);\n  const getFilteredExpenses = () => {\n    const now = new Date();\n    const filtered = expenses.filter(expense => {\n      const expenseDate = new Date(expense.date);\n      if (timeRange === 'month') {\n        return expenseDate.getMonth() === now.getMonth() && expenseDate.getFullYear() === now.getFullYear();\n      } else if (timeRange === 'year') {\n        return expenseDate.getFullYear() === now.getFullYear();\n      }\n      return true;\n    });\n    return filtered;\n  };\n  const getCategoryData = () => {\n    const filteredExpenses = getFilteredExpenses();\n    const categories = {};\n    filteredExpenses.forEach(expense => {\n      categories[expense.category] = (categories[expense.category] || 0) + expense.amount;\n    });\n    const backgroundColors = ['#FF6384',\n    // Food\n    '#36A2EB',\n    // Transportation\n    '#FFCE56',\n    // Entertainment\n    '#4BC0C0',\n    // Education\n    '#9966FF',\n    // Shopping\n    '#FF9F40',\n    // Bills\n    '#C9CBCF' // Other\n    ];\n    return {\n      labels: Object.keys(categories),\n      datasets: [{\n        label: 'Expenses by Category',\n        data: Object.values(categories),\n        backgroundColor: backgroundColors,\n        borderWidth: 1,\n        borderColor: '#fff',\n        hoverOffset: 15\n      }]\n    };\n  };\n  const getMonthlyData = () => {\n    const filteredExpenses = getFilteredExpenses();\n    const months = Array(12).fill(0);\n    filteredExpenses.forEach(expense => {\n      const month = new Date(expense.date).getMonth();\n      months[month] += expense.amount;\n    });\n    return {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      datasets: [{\n        label: 'Monthly Expenses',\n        data: months,\n        backgroundColor: selectedCategory ? '#36A2EB' : ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#C9CBCF', '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\n        borderWidth: 1,\n        borderRadius: 5\n      }]\n    };\n  };\n  const getCategoryMonthlyData = () => {\n    if (!selectedCategory) return getMonthlyData();\n    const filteredExpenses = getFilteredExpenses().filter(expense => expense.category === selectedCategory);\n    const months = Array(12).fill(0);\n    filteredExpenses.forEach(expense => {\n      const month = new Date(expense.date).getMonth();\n      months[month] += expense.amount;\n    });\n    return {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      datasets: [{\n        label: `${selectedCategory} Expenses`,\n        data: months,\n        backgroundColor: '#36A2EB',\n        borderWidth: 1,\n        borderRadius: 5\n      }]\n    };\n  };\n  const handlePieChartClick = (_, elements) => {\n    if (elements.length === 0) {\n      setSelectedCategory(null);\n      return;\n    }\n    const categoryIndex = elements[0].index;\n    const categoryName = getCategoryData().labels[categoryIndex];\n    setSelectedCategory(categoryName);\n  };\n\n  // Calculate summary statistics\n  const filteredExpenses = getFilteredExpenses();\n  const totalAmount = filteredExpenses.reduce((sum, expense) => sum + expense.amount, 0);\n  const averageAmount = filteredExpenses.length > 0 ? totalAmount / filteredExpenses.length : 0;\n\n  // Get highest category\n  const categoryTotals = {};\n  filteredExpenses.forEach(expense => {\n    categoryTotals[expense.category] = (categoryTotals[expense.category] || 0) + expense.amount;\n  });\n  let highestCategory = {\n    name: 'None',\n    amount: 0\n  };\n  Object.entries(categoryTotals).forEach(([category, amount]) => {\n    if (amount > highestCategory.amount) {\n      highestCategory = {\n        name: category,\n        amount\n      };\n    }\n  });\n  const barOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return `₹${context.formattedValue}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          callback: function (value) {\n            return '₹' + value;\n          }\n        }\n      }\n    },\n    onClick: () => setSelectedCategory(null)\n  };\n  const pieOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const value = context.raw;\n            const total = context.chart.getDatasetMeta(0).total;\n            const percentage = Math.round(value / total * 100);\n            return `₹${value} (${percentage}%)`;\n          }\n        }\n      }\n    },\n    onClick: handlePieChartClick\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reports\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expense Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-range\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeRange\",\n          children: \"Time Period:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeRange\",\n          value: timeRange,\n          onChange: e => setTimeRange(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"month\",\n            children: \"This Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year\",\n            children: \"This Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"chartType\",\n          children: \"Chart Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `chart-btn ${chartType === 'pie' ? 'active' : ''}`,\n            onClick: () => setChartType('pie'),\n            children: \"Pie Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `chart-btn ${chartType === 'bar' ? 'active' : ''}`,\n            onClick: () => setChartType('bar'),\n            children: \"Bar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading expense data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: [\"\\u20B9\", totalAmount.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-period\",\n            children: timeRange === 'month' ? 'This Month' : timeRange === 'year' ? 'This Year' : 'All Time'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Average Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: [\"\\u20B9\", averageAmount.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-period\",\n            children: \"Per Transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Top Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: highestCategory.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-amount\",\n            children: [\"\\u20B9\", highestCategory.amount.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this), selectedCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-filter-indicator\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing data for: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-filter-btn\",\n            onClick: () => setSelectedCategory(null),\n            children: \"Clear Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Expenses by Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), chartType === 'pie' ? /*#__PURE__*/_jsxDEV(Pie, {\n            data: getCategoryData(),\n            options: pieOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Bar, {\n            data: getCategoryMonthlyData(),\n            options: barOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 17\n          }, this), chartType === 'pie' && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chart-hint\",\n            children: \"Click on a category to filter the monthly chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"4vXM17RFTiDTFQHrj/PAyZMugu4=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","Bar","Pie","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Reports","_s","expenses","setExpenses","timeRange","setTimeRange","chartType","setChartType","selectedCategory","setSelectedCategory","isLoading","setIsLoading","setTimeout","mockExpenses","_id","amount","category","description","date","Date","getFilteredExpenses","now","filtered","filter","expense","expenseDate","getMonth","getFullYear","getCategoryData","filteredExpenses","categories","forEach","backgroundColors","labels","Object","keys","datasets","label","data","values","backgroundColor","borderWidth","borderColor","hoverOffset","getMonthlyData","months","Array","fill","month","borderRadius","getCategoryMonthlyData","handlePieChartClick","_","elements","length","categoryIndex","index","categoryName","totalAmount","reduce","sum","averageAmount","categoryTotals","highestCategory","name","entries","barOptions","responsive","plugins","legend","position","tooltip","callbacks","context","formattedValue","scales","y","beginAtZero","ticks","callback","value","onClick","pieOptions","raw","total","chart","getDatasetMeta","percentage","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","e","target","toFixed","options","_c","$RefreshReg$"],"sources":["/Users/aaryarane29/Desktop/test/expense/frontend/src/components/Reports.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from 'chart.js';\nimport { Bar, Pie } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n\nconst Reports = () => {\n  const [expenses, setExpenses] = useState([]);\n  const [timeRange, setTimeRange] = useState('month');\n  const [chartType, setChartType] = useState('pie');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Simulate loading data\n    setIsLoading(true);\n    \n    // Mock expenses data - simulate a delay for loading effect\n    setTimeout(() => {\n      const mockExpenses = [\n        {\n          _id: '1',\n          amount: 150,\n          category: 'Food',\n          description: 'Grocery shopping',\n          date: new Date('2023-08-15')\n        },\n        {\n          _id: '2',\n          amount: 50,\n          category: 'Transportation',\n          description: 'Gas',\n          date: new Date('2023-08-14')\n        },\n        {\n          _id: '3',\n          amount: 200,\n          category: 'Education',\n          description: 'Books',\n          date: new Date('2023-08-10')\n        },\n        {\n          _id: '4',\n          amount: 100,\n          category: 'Entertainment',\n          description: 'Movie night',\n          date: new Date('2023-08-08')\n        },\n        {\n          _id: '5',\n          amount: 75,\n          category: 'Shopping',\n          description: 'Clothes',\n          date: new Date('2023-08-05')\n        },\n        {\n          _id: '6',\n          amount: 120,\n          category: 'Food',\n          description: 'Dining out',\n          date: new Date('2023-08-03')\n        },\n        {\n          _id: '7',\n          amount: 60,\n          category: 'Bills',\n          description: 'Internet bill',\n          date: new Date('2023-08-01')\n        }\n      ];\n  \n      setExpenses(mockExpenses);\n      setIsLoading(false);\n    }, 800);\n  }, []);\n\n  const getFilteredExpenses = () => {\n    const now = new Date();\n    const filtered = expenses.filter((expense) => {\n      const expenseDate = new Date(expense.date);\n      if (timeRange === 'month') {\n        return (\n          expenseDate.getMonth() === now.getMonth() &&\n          expenseDate.getFullYear() === now.getFullYear()\n        );\n      } else if (timeRange === 'year') {\n        return expenseDate.getFullYear() === now.getFullYear();\n      }\n      return true;\n    });\n    return filtered;\n  };\n\n  const getCategoryData = () => {\n    const filteredExpenses = getFilteredExpenses();\n    const categories = {};\n    filteredExpenses.forEach((expense) => {\n      categories[expense.category] = (categories[expense.category] || 0) + expense.amount;\n    });\n\n    const backgroundColors = [\n      '#FF6384', // Food\n      '#36A2EB', // Transportation\n      '#FFCE56', // Entertainment\n      '#4BC0C0', // Education\n      '#9966FF', // Shopping\n      '#FF9F40', // Bills\n      '#C9CBCF'  // Other\n    ];\n\n    return {\n      labels: Object.keys(categories),\n      datasets: [\n        {\n          label: 'Expenses by Category',\n          data: Object.values(categories),\n          backgroundColor: backgroundColors,\n          borderWidth: 1,\n          borderColor: '#fff',\n          hoverOffset: 15\n        },\n      ],\n    };\n  };\n\n  const getMonthlyData = () => {\n    const filteredExpenses = getFilteredExpenses();\n    const months = Array(12).fill(0);\n    filteredExpenses.forEach((expense) => {\n      const month = new Date(expense.date).getMonth();\n      months[month] += expense.amount;\n    });\n\n    return {\n      labels: [\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n        'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n      ],\n      datasets: [\n        {\n          label: 'Monthly Expenses',\n          data: months,\n          backgroundColor: selectedCategory ? '#36A2EB' : [\n            '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0',\n            '#9966FF', '#FF9F40', '#C9CBCF', '#FF6384',\n            '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'\n          ],\n          borderWidth: 1,\n          borderRadius: 5,\n        },\n      ],\n    };\n  };\n\n  const getCategoryMonthlyData = () => {\n    if (!selectedCategory) return getMonthlyData();\n\n    const filteredExpenses = getFilteredExpenses().filter(\n      (expense) => expense.category === selectedCategory\n    );\n    \n    const months = Array(12).fill(0);\n    filteredExpenses.forEach((expense) => {\n      const month = new Date(expense.date).getMonth();\n      months[month] += expense.amount;\n    });\n\n    return {\n      labels: [\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n        'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n      ],\n      datasets: [\n        {\n          label: `${selectedCategory} Expenses`,\n          data: months,\n          backgroundColor: '#36A2EB',\n          borderWidth: 1,\n          borderRadius: 5,\n        },\n      ],\n    };\n  };\n\n  const handlePieChartClick = (_, elements) => {\n    if (elements.length === 0) {\n      setSelectedCategory(null);\n      return;\n    }\n    \n    const categoryIndex = elements[0].index;\n    const categoryName = getCategoryData().labels[categoryIndex];\n    setSelectedCategory(categoryName);\n  };\n\n  // Calculate summary statistics\n  const filteredExpenses = getFilteredExpenses();\n  const totalAmount = filteredExpenses.reduce((sum, expense) => sum + expense.amount, 0);\n  const averageAmount = filteredExpenses.length > 0 \n    ? totalAmount / filteredExpenses.length \n    : 0;\n  \n  // Get highest category\n  const categoryTotals = {};\n  filteredExpenses.forEach(expense => {\n    categoryTotals[expense.category] = (categoryTotals[expense.category] || 0) + expense.amount;\n  });\n  \n  let highestCategory = { name: 'None', amount: 0 };\n  Object.entries(categoryTotals).forEach(([category, amount]) => {\n    if (amount > highestCategory.amount) {\n      highestCategory = { name: category, amount };\n    }\n  });\n\n  const barOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            return `₹${context.formattedValue}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          callback: function(value) {\n            return '₹' + value;\n          }\n        }\n      }\n    },\n    onClick: () => setSelectedCategory(null)\n  };\n\n  const pieOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const value = context.raw;\n            const total = context.chart.getDatasetMeta(0).total;\n            const percentage = Math.round((value / total) * 100);\n            return `₹${value} (${percentage}%)`;\n          }\n        }\n      }\n    },\n    onClick: handlePieChartClick\n  };\n\n  return (\n    <div className=\"reports\">\n      <h2>Expense Reports</h2>\n      \n      <div className=\"report-controls\">\n        <div className=\"time-range\">\n          <label htmlFor=\"timeRange\">Time Period:</label>\n          <select \n            id=\"timeRange\"\n            value={timeRange} \n            onChange={(e) => setTimeRange(e.target.value)}\n          >\n            <option value=\"month\">This Month</option>\n            <option value=\"year\">This Year</option>\n            <option value=\"all\">All Time</option>\n          </select>\n        </div>\n        \n        <div className=\"chart-type\">\n          <label htmlFor=\"chartType\">Chart Type:</label>\n          <div className=\"chart-toggle\">\n            <button \n              className={`chart-btn ${chartType === 'pie' ? 'active' : ''}`}\n              onClick={() => setChartType('pie')}\n            >\n              Pie Chart\n            </button>\n            <button \n              className={`chart-btn ${chartType === 'bar' ? 'active' : ''}`}\n              onClick={() => setChartType('bar')}\n            >\n              Bar Chart\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {isLoading ? (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading expense data...</p>\n        </div>\n      ) : (\n        <>\n          <div className=\"summary-stats\">\n            <div className=\"stat-card\">\n              <h3>Total Expenses</h3>\n              <p className=\"stat-value\">₹{totalAmount.toFixed(2)}</p>\n              <p className=\"stat-period\">{timeRange === 'month' ? 'This Month' : timeRange === 'year' ? 'This Year' : 'All Time'}</p>\n            </div>\n            \n            <div className=\"stat-card\">\n              <h3>Average Expense</h3>\n              <p className=\"stat-value\">₹{averageAmount.toFixed(2)}</p>\n              <p className=\"stat-period\">Per Transaction</p>\n            </div>\n            \n            <div className=\"stat-card\">\n              <h3>Top Category</h3>\n              <p className=\"stat-value\">{highestCategory.name}</p>\n              <p className=\"stat-amount\">₹{highestCategory.amount.toFixed(2)}</p>\n            </div>\n          </div>\n          \n          {selectedCategory && (\n            <div className=\"category-filter-indicator\">\n              <p>\n                Showing data for: <strong>{selectedCategory}</strong>\n                <button \n                  className=\"clear-filter-btn\"\n                  onClick={() => setSelectedCategory(null)}\n                >\n                  Clear Filter\n                </button>\n              </p>\n            </div>\n          )}\n\n          <div className=\"charts\">\n            <div className=\"chart-container\">\n              <h3>Expenses by Category</h3>\n              {chartType === 'pie' ? (\n                <Pie data={getCategoryData()} options={pieOptions} />\n              ) : (\n                <Bar \n                  data={getCategoryMonthlyData()} \n                  options={barOptions}\n                />\n              )}\n              {chartType === 'pie' && (\n                <p className=\"chart-hint\">Click on a category to filter the monthly chart</p>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Reports; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,QACL,UAAU;AACjB,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3Cb,OAAO,CAACc,QAAQ,CACdb,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UACF,CAAC;AAED,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,OAAO,CAAC;EACnD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA4B,YAAY,CAAC,IAAI,CAAC;;IAElB;IACAC,UAAU,CAAC,MAAM;MACf,MAAMC,YAAY,GAAG,CACnB;QACEC,GAAG,EAAE,GAAG;QACRC,MAAM,EAAE,GAAG;QACXC,QAAQ,EAAE,MAAM;QAChBC,WAAW,EAAE,kBAAkB;QAC/BC,IAAI,EAAE,IAAIC,IAAI,CAAC,YAAY;MAC7B,CAAC,EACD;QACEL,GAAG,EAAE,GAAG;QACRC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,gBAAgB;QAC1BC,WAAW,EAAE,KAAK;QAClBC,IAAI,EAAE,IAAIC,IAAI,CAAC,YAAY;MAC7B,CAAC,EACD;QACEL,GAAG,EAAE,GAAG;QACRC,MAAM,EAAE,GAAG;QACXC,QAAQ,EAAE,WAAW;QACrBC,WAAW,EAAE,OAAO;QACpBC,IAAI,EAAE,IAAIC,IAAI,CAAC,YAAY;MAC7B,CAAC,EACD;QACEL,GAAG,EAAE,GAAG;QACRC,MAAM,EAAE,GAAG;QACXC,QAAQ,EAAE,eAAe;QACzBC,WAAW,EAAE,aAAa;QAC1BC,IAAI,EAAE,IAAIC,IAAI,CAAC,YAAY;MAC7B,CAAC,EACD;QACEL,GAAG,EAAE,GAAG;QACRC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,UAAU;QACpBC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAE,IAAIC,IAAI,CAAC,YAAY;MAC7B,CAAC,EACD;QACEL,GAAG,EAAE,GAAG;QACRC,MAAM,EAAE,GAAG;QACXC,QAAQ,EAAE,MAAM;QAChBC,WAAW,EAAE,YAAY;QACzBC,IAAI,EAAE,IAAIC,IAAI,CAAC,YAAY;MAC7B,CAAC,EACD;QACEL,GAAG,EAAE,GAAG;QACRC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,OAAO;QACjBC,WAAW,EAAE,eAAe;QAC5BC,IAAI,EAAE,IAAIC,IAAI,CAAC,YAAY;MAC7B,CAAC,CACF;MAEDhB,WAAW,CAACU,YAAY,CAAC;MACzBF,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,GAAG,GAAG,IAAIF,IAAI,CAAC,CAAC;IACtB,MAAMG,QAAQ,GAAGpB,QAAQ,CAACqB,MAAM,CAAEC,OAAO,IAAK;MAC5C,MAAMC,WAAW,GAAG,IAAIN,IAAI,CAACK,OAAO,CAACN,IAAI,CAAC;MAC1C,IAAId,SAAS,KAAK,OAAO,EAAE;QACzB,OACEqB,WAAW,CAACC,QAAQ,CAAC,CAAC,KAAKL,GAAG,CAACK,QAAQ,CAAC,CAAC,IACzCD,WAAW,CAACE,WAAW,CAAC,CAAC,KAAKN,GAAG,CAACM,WAAW,CAAC,CAAC;MAEnD,CAAC,MAAM,IAAIvB,SAAS,KAAK,MAAM,EAAE;QAC/B,OAAOqB,WAAW,CAACE,WAAW,CAAC,CAAC,KAAKN,GAAG,CAACM,WAAW,CAAC,CAAC;MACxD;MACA,OAAO,IAAI;IACb,CAAC,CAAC;IACF,OAAOL,QAAQ;EACjB,CAAC;EAED,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,gBAAgB,GAAGT,mBAAmB,CAAC,CAAC;IAC9C,MAAMU,UAAU,GAAG,CAAC,CAAC;IACrBD,gBAAgB,CAACE,OAAO,CAAEP,OAAO,IAAK;MACpCM,UAAU,CAACN,OAAO,CAACR,QAAQ,CAAC,GAAG,CAACc,UAAU,CAACN,OAAO,CAACR,QAAQ,CAAC,IAAI,CAAC,IAAIQ,OAAO,CAACT,MAAM;IACrF,CAAC,CAAC;IAEF,MAAMiB,gBAAgB,GAAG,CACvB,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS,CAAE;IAAA,CACZ;IAED,OAAO;MACLC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACL,UAAU,CAAC;MAC/BM,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,sBAAsB;QAC7BC,IAAI,EAAEJ,MAAM,CAACK,MAAM,CAACT,UAAU,CAAC;QAC/BU,eAAe,EAAER,gBAAgB;QACjCS,WAAW,EAAE,CAAC;QACdC,WAAW,EAAE,MAAM;QACnBC,WAAW,EAAE;MACf,CAAC;IAEL,CAAC;EACH,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMf,gBAAgB,GAAGT,mBAAmB,CAAC,CAAC;IAC9C,MAAMyB,MAAM,GAAGC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAChClB,gBAAgB,CAACE,OAAO,CAAEP,OAAO,IAAK;MACpC,MAAMwB,KAAK,GAAG,IAAI7B,IAAI,CAACK,OAAO,CAACN,IAAI,CAAC,CAACQ,QAAQ,CAAC,CAAC;MAC/CmB,MAAM,CAACG,KAAK,CAAC,IAAIxB,OAAO,CAACT,MAAM;IACjC,CAAC,CAAC;IAEF,OAAO;MACLkB,MAAM,EAAE,CACN,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACxC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CACzC;MACDG,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,kBAAkB;QACzBC,IAAI,EAAEO,MAAM;QACZL,eAAe,EAAEhC,gBAAgB,GAAG,SAAS,GAAG,CAC9C,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAC1C,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAC1C,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAC3C;QACDiC,WAAW,EAAE,CAAC;QACdQ,YAAY,EAAE;MAChB,CAAC;IAEL,CAAC;EACH,CAAC;EAED,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACnC,IAAI,CAAC1C,gBAAgB,EAAE,OAAOoC,cAAc,CAAC,CAAC;IAE9C,MAAMf,gBAAgB,GAAGT,mBAAmB,CAAC,CAAC,CAACG,MAAM,CAClDC,OAAO,IAAKA,OAAO,CAACR,QAAQ,KAAKR,gBACpC,CAAC;IAED,MAAMqC,MAAM,GAAGC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAChClB,gBAAgB,CAACE,OAAO,CAAEP,OAAO,IAAK;MACpC,MAAMwB,KAAK,GAAG,IAAI7B,IAAI,CAACK,OAAO,CAACN,IAAI,CAAC,CAACQ,QAAQ,CAAC,CAAC;MAC/CmB,MAAM,CAACG,KAAK,CAAC,IAAIxB,OAAO,CAACT,MAAM;IACjC,CAAC,CAAC;IAEF,OAAO;MACLkB,MAAM,EAAE,CACN,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACxC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CACzC;MACDG,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,GAAG7B,gBAAgB,WAAW;QACrC8B,IAAI,EAAEO,MAAM;QACZL,eAAe,EAAE,SAAS;QAC1BC,WAAW,EAAE,CAAC;QACdQ,YAAY,EAAE;MAChB,CAAC;IAEL,CAAC;EACH,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAACC,CAAC,EAAEC,QAAQ,KAAK;IAC3C,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;MACzB7C,mBAAmB,CAAC,IAAI,CAAC;MACzB;IACF;IAEA,MAAM8C,aAAa,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAACG,KAAK;IACvC,MAAMC,YAAY,GAAG7B,eAAe,CAAC,CAAC,CAACK,MAAM,CAACsB,aAAa,CAAC;IAC5D9C,mBAAmB,CAACgD,YAAY,CAAC;EACnC,CAAC;;EAED;EACA,MAAM5B,gBAAgB,GAAGT,mBAAmB,CAAC,CAAC;EAC9C,MAAMsC,WAAW,GAAG7B,gBAAgB,CAAC8B,MAAM,CAAC,CAACC,GAAG,EAAEpC,OAAO,KAAKoC,GAAG,GAAGpC,OAAO,CAACT,MAAM,EAAE,CAAC,CAAC;EACtF,MAAM8C,aAAa,GAAGhC,gBAAgB,CAACyB,MAAM,GAAG,CAAC,GAC7CI,WAAW,GAAG7B,gBAAgB,CAACyB,MAAM,GACrC,CAAC;;EAEL;EACA,MAAMQ,cAAc,GAAG,CAAC,CAAC;EACzBjC,gBAAgB,CAACE,OAAO,CAACP,OAAO,IAAI;IAClCsC,cAAc,CAACtC,OAAO,CAACR,QAAQ,CAAC,GAAG,CAAC8C,cAAc,CAACtC,OAAO,CAACR,QAAQ,CAAC,IAAI,CAAC,IAAIQ,OAAO,CAACT,MAAM;EAC7F,CAAC,CAAC;EAEF,IAAIgD,eAAe,GAAG;IAAEC,IAAI,EAAE,MAAM;IAAEjD,MAAM,EAAE;EAAE,CAAC;EACjDmB,MAAM,CAAC+B,OAAO,CAACH,cAAc,CAAC,CAAC/B,OAAO,CAAC,CAAC,CAACf,QAAQ,EAAED,MAAM,CAAC,KAAK;IAC7D,IAAIA,MAAM,GAAGgD,eAAe,CAAChD,MAAM,EAAE;MACnCgD,eAAe,GAAG;QAAEC,IAAI,EAAEhD,QAAQ;QAAED;MAAO,CAAC;IAC9C;EACF,CAAC,CAAC;EAEF,MAAMmD,UAAU,GAAG;IACjBC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,OAAO,EAAE;QACPC,SAAS,EAAE;UACTnC,KAAK,EAAE,SAAAA,CAASoC,OAAO,EAAE;YACvB,OAAO,IAAIA,OAAO,CAACC,cAAc,EAAE;UACrC;QACF;MACF;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjBC,KAAK,EAAE;UACLC,QAAQ,EAAE,SAAAA,CAASC,KAAK,EAAE;YACxB,OAAO,GAAG,GAAGA,KAAK;UACpB;QACF;MACF;IACF,CAAC;IACDC,OAAO,EAAEA,CAAA,KAAMxE,mBAAmB,CAAC,IAAI;EACzC,CAAC;EAED,MAAMyE,UAAU,GAAG;IACjBf,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,OAAO,EAAE;QACPC,SAAS,EAAE;UACTnC,KAAK,EAAE,SAAAA,CAASoC,OAAO,EAAE;YACvB,MAAMO,KAAK,GAAGP,OAAO,CAACU,GAAG;YACzB,MAAMC,KAAK,GAAGX,OAAO,CAACY,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAACF,KAAK;YACnD,MAAMG,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAET,KAAK,GAAGI,KAAK,GAAI,GAAG,CAAC;YACpD,OAAO,IAAIJ,KAAK,KAAKO,UAAU,IAAI;UACrC;QACF;MACF;IACF,CAAC;IACDN,OAAO,EAAE9B;EACX,CAAC;EAED,oBACEvD,OAAA;IAAK8F,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtB/F,OAAA;MAAA+F,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExBnG,OAAA;MAAK8F,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B/F,OAAA;QAAK8F,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB/F,OAAA;UAAOoG,OAAO,EAAC,WAAW;UAAAL,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/CnG,OAAA;UACEqG,EAAE,EAAC,WAAW;UACdjB,KAAK,EAAE5E,SAAU;UACjB8F,QAAQ,EAAGC,CAAC,IAAK9F,YAAY,CAAC8F,CAAC,CAACC,MAAM,CAACpB,KAAK,CAAE;UAAAW,QAAA,gBAE9C/F,OAAA;YAAQoF,KAAK,EAAC,OAAO;YAAAW,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzCnG,OAAA;YAAQoF,KAAK,EAAC,MAAM;YAAAW,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACvCnG,OAAA;YAAQoF,KAAK,EAAC,KAAK;YAAAW,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENnG,OAAA;QAAK8F,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB/F,OAAA;UAAOoG,OAAO,EAAC,WAAW;UAAAL,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9CnG,OAAA;UAAK8F,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B/F,OAAA;YACE8F,SAAS,EAAE,aAAapF,SAAS,KAAK,KAAK,GAAG,QAAQ,GAAG,EAAE,EAAG;YAC9D2E,OAAO,EAAEA,CAAA,KAAM1E,YAAY,CAAC,KAAK,CAAE;YAAAoF,QAAA,EACpC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTnG,OAAA;YACE8F,SAAS,EAAE,aAAapF,SAAS,KAAK,KAAK,GAAG,QAAQ,GAAG,EAAE,EAAG;YAC9D2E,OAAO,EAAEA,CAAA,KAAM1E,YAAY,CAAC,KAAK,CAAE;YAAAoF,QAAA,EACpC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELrF,SAAS,gBACRd,OAAA;MAAK8F,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC/F,OAAA;QAAK8F,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvCnG,OAAA;QAAA+F,QAAA,EAAG;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,gBAENnG,OAAA,CAAAE,SAAA;MAAA6F,QAAA,gBACE/F,OAAA;QAAK8F,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B/F,OAAA;UAAK8F,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB/F,OAAA;YAAA+F,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvBnG,OAAA;YAAG8F,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAC,QAAC,EAACjC,WAAW,CAAC2C,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvDnG,OAAA;YAAG8F,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEvF,SAAS,KAAK,OAAO,GAAG,YAAY,GAAGA,SAAS,KAAK,MAAM,GAAG,WAAW,GAAG;UAAU;YAAAwF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpH,CAAC,eAENnG,OAAA;UAAK8F,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB/F,OAAA;YAAA+F,QAAA,EAAI;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBnG,OAAA;YAAG8F,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAC,QAAC,EAAC9B,aAAa,CAACwC,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzDnG,OAAA;YAAG8F,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,eAENnG,OAAA;UAAK8F,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB/F,OAAA;YAAA+F,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBnG,OAAA;YAAG8F,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAE5B,eAAe,CAACC;UAAI;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpDnG,OAAA;YAAG8F,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAC,QAAC,EAAC5B,eAAe,CAAChD,MAAM,CAACsF,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAELvF,gBAAgB,iBACfZ,OAAA;QAAK8F,SAAS,EAAC,2BAA2B;QAAAC,QAAA,eACxC/F,OAAA;UAAA+F,QAAA,GAAG,oBACiB,eAAA/F,OAAA;YAAA+F,QAAA,EAASnF;UAAgB;YAAAoF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eACrDnG,OAAA;YACE8F,SAAS,EAAC,kBAAkB;YAC5BT,OAAO,EAAEA,CAAA,KAAMxE,mBAAmB,CAAC,IAAI,CAAE;YAAAkF,QAAA,EAC1C;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACN,eAEDnG,OAAA;QAAK8F,SAAS,EAAC,QAAQ;QAAAC,QAAA,eACrB/F,OAAA;UAAK8F,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B/F,OAAA;YAAA+F,QAAA,EAAI;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC5BzF,SAAS,KAAK,KAAK,gBAClBV,OAAA,CAACF,GAAG;YAAC4C,IAAI,EAAEV,eAAe,CAAC,CAAE;YAAC0E,OAAO,EAAEpB;UAAW;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAErDnG,OAAA,CAACH,GAAG;YACF6C,IAAI,EAAEY,sBAAsB,CAAC,CAAE;YAC/BoD,OAAO,EAAEpC;UAAW;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CACF,EACAzF,SAAS,KAAK,KAAK,iBAClBV,OAAA;YAAG8F,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAA+C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAC7E;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,eACN,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9F,EAAA,CAlWID,OAAO;AAAAuG,EAAA,GAAPvG,OAAO;AAoWb,eAAeA,OAAO;AAAC,IAAAuG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}