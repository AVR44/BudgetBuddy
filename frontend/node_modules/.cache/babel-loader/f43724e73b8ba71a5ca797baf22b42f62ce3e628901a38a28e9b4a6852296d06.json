{"ast":null,"code":"var _jsxFileName = \"/Users/aaryarane29/Desktop/test/expense/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// API configuration\nconst API_BASE_URL = 'http://localhost:8008/api';\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Mock data\n  const mockUser = {\n    id: '123456',\n    name: 'Demo User',\n    email: 'demo@example.com',\n    monthlyBudget: 1000\n  };\n\n  // Login function\n  const login = async formData => {\n    try {\n      setLoading(true);\n\n      // First try the real API\n      try {\n        const response = await axios.post(`${API_BASE_URL}/auth/login`, formData);\n        const {\n          token,\n          user\n        } = response.data;\n\n        // Store token and user data\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        setUser(user);\n        setIsAuthenticated(true);\n        setError(null);\n        setLoading(false);\n        return true;\n      } catch (apiError) {\n        console.log('API login failed, falling back to mock login');\n\n        // Fall back to mock login if API fails\n        if (formData.email === 'demo@example.com' && formData.password === 'password123') {\n          console.log('Mock login successful');\n          localStorage.setItem('mockUser', JSON.stringify(mockUser));\n          setUser(mockUser);\n          setIsAuthenticated(true);\n          setError(null);\n          setLoading(false);\n          return true;\n        } else {\n          setError('Invalid credentials. Use demo@example.com / password123');\n          setLoading(false);\n          return false;\n        }\n      }\n    } catch (err) {\n      setError('Login failed');\n      setLoading(false);\n      return false;\n    }\n  };\n\n  // Register function\n  const register = async formData => {\n    try {\n      setLoading(true);\n\n      // First try the real API\n      try {\n        const response = await axios.post(`${API_BASE_URL}/auth/register`, formData);\n        const {\n          token,\n          user\n        } = response.data;\n\n        // Store token and user data\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        setUser(user);\n        setIsAuthenticated(true);\n        setError(null);\n        setLoading(false);\n        return true;\n      } catch (apiError) {\n        console.log('API registration failed, falling back to mock registration');\n\n        // Fall back to mock registration\n        localStorage.setItem('mockUser', JSON.stringify({\n          ...mockUser,\n          name: formData.name,\n          email: formData.email\n        }));\n        setUser({\n          ...mockUser,\n          name: formData.name,\n          email: formData.email\n        });\n        setIsAuthenticated(true);\n        setError(null);\n        setLoading(false);\n        return true;\n      }\n    } catch (err) {\n      setError('Registration failed');\n      setLoading(false);\n      return false;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('mockUser');\n    setUser(null);\n    setIsAuthenticated(false);\n    setError(null);\n  };\n\n  // Check for stored user on mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('mockUser');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      loading,\n      error,\n      register,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"T7EMgCdntuLZa7DrsTfVXRnfMmg=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","API_BASE_URL","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","mockUser","id","name","email","monthlyBudget","login","formData","response","post","token","data","localStorage","setItem","JSON","stringify","apiError","console","log","password","err","register","logout","removeItem","storedUser","getItem","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aaryarane29/Desktop/test/expense/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nconst AuthContext = createContext();\n\n// API configuration\nconst API_BASE_URL = 'http://localhost:8008/api';\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Mock data\n  const mockUser = {\n    id: '123456',\n    name: 'Demo User',\n    email: 'demo@example.com',\n    monthlyBudget: 1000\n  };\n\n  // Login function\n  const login = async (formData) => {\n    try {\n      setLoading(true);\n      \n      // First try the real API\n      try {\n        const response = await axios.post(`${API_BASE_URL}/auth/login`, formData);\n        const { token, user } = response.data;\n        \n        // Store token and user data\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        setUser(user);\n        setIsAuthenticated(true);\n        setError(null);\n        setLoading(false);\n        return true;\n      } catch (apiError) {\n        console.log('API login failed, falling back to mock login');\n        \n        // Fall back to mock login if API fails\n        if (formData.email === 'demo@example.com' && formData.password === 'password123') {\n          console.log('Mock login successful');\n          \n          localStorage.setItem('mockUser', JSON.stringify(mockUser));\n          setUser(mockUser);\n          setIsAuthenticated(true);\n          setError(null);\n          setLoading(false);\n          return true;\n        } else {\n          setError('Invalid credentials. Use demo@example.com / password123');\n          setLoading(false);\n          return false;\n        }\n      }\n    } catch (err) {\n      setError('Login failed');\n      setLoading(false);\n      return false;\n    }\n  };\n\n  // Register function\n  const register = async (formData) => {\n    try {\n      setLoading(true);\n      \n      // First try the real API\n      try {\n        const response = await axios.post(`${API_BASE_URL}/auth/register`, formData);\n        const { token, user } = response.data;\n        \n        // Store token and user data\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        setUser(user);\n        setIsAuthenticated(true);\n        setError(null);\n        setLoading(false);\n        return true;\n      } catch (apiError) {\n        console.log('API registration failed, falling back to mock registration');\n        \n        // Fall back to mock registration\n        localStorage.setItem('mockUser', JSON.stringify({\n          ...mockUser,\n          name: formData.name,\n          email: formData.email\n        }));\n        \n        setUser({\n          ...mockUser,\n          name: formData.name,\n          email: formData.email\n        });\n        \n        setIsAuthenticated(true);\n        setError(null);\n        setLoading(false);\n        return true;\n      }\n    } catch (err) {\n      setError('Registration failed');\n      setLoading(false);\n      return false;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('mockUser');\n    setUser(null);\n    setIsAuthenticated(false);\n    setError(null);\n  };\n\n  // Check for stored user on mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('mockUser');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        isAuthenticated,\n        loading,\n        error,\n        register,\n        login,\n        logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}