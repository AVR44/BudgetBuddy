{"ast":null,"code":"var _jsxFileName = \"/Users/aaryarane29/Desktop/test/expense/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Mock data\n  const mockUser = {\n    id: '123456',\n    name: 'Demo User',\n    email: 'demo@example.com',\n    monthlyBudget: 1000\n  };\n\n  // Mock login function\n  const login = async formData => {\n    try {\n      // Check for demo credentials\n      if (formData.email === 'demo@example.com' && formData.password === 'password123') {\n        console.log('Mock login successful');\n\n        // Set mock user data\n        localStorage.setItem('mockUser', JSON.stringify(mockUser));\n        setUser(mockUser);\n        setIsAuthenticated(true);\n        setError(null);\n        return true;\n      } else {\n        // Mock login failure\n        setError('Invalid credentials. Use demo@example.com / password123');\n        return false;\n      }\n    } catch (err) {\n      setError('Login failed');\n      return false;\n    }\n  };\n\n  // Mock register function\n  const register = async formData => {\n    try {\n      // Always succeed with mock data\n      console.log('Mock registration successful');\n\n      // Set mock user data\n      localStorage.setItem('mockUser', JSON.stringify({\n        ...mockUser,\n        name: formData.name,\n        email: formData.email\n      }));\n      setUser({\n        ...mockUser,\n        name: formData.name,\n        email: formData.email\n      });\n      setIsAuthenticated(true);\n      setError(null);\n      return true;\n    } catch (err) {\n      setError('Registration failed');\n      return false;\n    }\n  };\n\n  // Mock logout function\n  const logout = () => {\n    localStorage.removeItem('mockUser');\n    setUser(null);\n    setIsAuthenticated(false);\n    setError(null);\n  };\n\n  // Check for stored user on mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('mockUser');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      loading,\n      error,\n      register,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"T7EMgCdntuLZa7DrsTfVXRnfMmg=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","mockUser","id","name","email","monthlyBudget","login","formData","password","console","log","localStorage","setItem","JSON","stringify","err","register","logout","removeItem","storedUser","getItem","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aaryarane29/Desktop/test/expense/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Mock data\n  const mockUser = {\n    id: '123456',\n    name: 'Demo User',\n    email: 'demo@example.com',\n    monthlyBudget: 1000\n  };\n\n  // Mock login function\n  const login = async (formData) => {\n    try {\n      // Check for demo credentials\n      if (formData.email === 'demo@example.com' && formData.password === 'password123') {\n        console.log('Mock login successful');\n        \n        // Set mock user data\n        localStorage.setItem('mockUser', JSON.stringify(mockUser));\n        setUser(mockUser);\n        setIsAuthenticated(true);\n        setError(null);\n        return true;\n      } else {\n        // Mock login failure\n        setError('Invalid credentials. Use demo@example.com / password123');\n        return false;\n      }\n    } catch (err) {\n      setError('Login failed');\n      return false;\n    }\n  };\n\n  // Mock register function\n  const register = async (formData) => {\n    try {\n      // Always succeed with mock data\n      console.log('Mock registration successful');\n      \n      // Set mock user data\n      localStorage.setItem('mockUser', JSON.stringify({\n        ...mockUser,\n        name: formData.name,\n        email: formData.email\n      }));\n      \n      setUser({\n        ...mockUser,\n        name: formData.name,\n        email: formData.email\n      });\n      \n      setIsAuthenticated(true);\n      setError(null);\n      return true;\n    } catch (err) {\n      setError('Registration failed');\n      return false;\n    }\n  };\n\n  // Mock logout function\n  const logout = () => {\n    localStorage.removeItem('mockUser');\n    setUser(null);\n    setIsAuthenticated(false);\n    setError(null);\n  };\n\n  // Check for stored user on mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('mockUser');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        isAuthenticated,\n        loading,\n        error,\n        register,\n        login,\n        logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}