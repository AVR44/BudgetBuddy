{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n  return config;\n});\n\n// Expense API calls\nexport const expenseService = {\n  // Get all expenses\n  getExpenses: async () => {\n    try {\n      const response = await api.get('/expenses');\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n        message: 'Error fetching expenses'\n      };\n    }\n  },\n  // Add new expense\n  addExpense: async expenseData => {\n    try {\n      const response = await api.post('/expenses', expenseData);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n        message: 'Error adding expense'\n      };\n    }\n  },\n  // Update expense\n  updateExpense: async (id, expenseData) => {\n    try {\n      const response = await api.put(`/expenses/${id}`, expenseData);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n        message: 'Error updating expense'\n      };\n    }\n  },\n  // Delete expense\n  deleteExpense: async id => {\n    try {\n      const response = await api.delete(`/expenses/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || {\n        message: 'Error deleting expense'\n      };\n    }\n  }\n};\n\n// Auth API calls\nexport const authService = {\n  // Register user\n  register: async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || {\n        message: 'Error registering user'\n      };\n    }\n  },\n  // Login user\n  login: async credentials => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      return response.data;\n    } catch (error) {\n      var _error$response6;\n      throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || {\n        message: 'Error logging in'\n      };\n    }\n  },\n  // Get user data\n  getUser: async () => {\n    try {\n      const response = await api.get('/auth/user');\n      return response.data;\n    } catch (error) {\n      var _error$response7;\n      throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || {\n        message: 'Error fetching user data'\n      };\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","expenseService","getExpenses","response","get","data","error","_error$response","message","addExpense","expenseData","post","_error$response2","updateExpense","id","put","_error$response3","deleteExpense","delete","_error$response4","authService","register","userData","_error$response5","login","credentials","_error$response6","getUser","_error$response7"],"sources":["/Users/aaryarane29/Desktop/test/expense/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n  return config;\n});\n\n// Expense API calls\nexport const expenseService = {\n  // Get all expenses\n  getExpenses: async () => {\n    try {\n      const response = await api.get('/expenses');\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || { message: 'Error fetching expenses' };\n    }\n  },\n\n  // Add new expense\n  addExpense: async (expenseData) => {\n    try {\n      const response = await api.post('/expenses', expenseData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || { message: 'Error adding expense' };\n    }\n  },\n\n  // Update expense\n  updateExpense: async (id, expenseData) => {\n    try {\n      const response = await api.put(`/expenses/${id}`, expenseData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || { message: 'Error updating expense' };\n    }\n  },\n\n  // Delete expense\n  deleteExpense: async (id) => {\n    try {\n      const response = await api.delete(`/expenses/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || { message: 'Error deleting expense' };\n    }\n  }\n};\n\n// Auth API calls\nexport const authService = {\n  // Register user\n  register: async (userData) => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || { message: 'Error registering user' };\n    }\n  },\n\n  // Login user\n  login: async (credentials) => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || { message: 'Error logging in' };\n    }\n  },\n\n  // Get user data\n  getUser: async () => {\n    try {\n      const response = await api.get('/auth/user');\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || { message: 'Error fetching user data' };\n    }\n  }\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}